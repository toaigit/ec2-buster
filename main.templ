provider "aws" {
  region = "{{.Env.region}}"
}

data "template_file" "userdata" {
  template = "${file("${path.module}/userdata.sh")}"
  vars = {
    host_name = "{{.Env.host_name}}"
    local_domain_name = "{{.Env.local_domain_name}}"
    apps_vol = "${aws_ebs_volume.apps.id}"
    my_eip_id = "${aws_eip.my_eip.id}"
  }
}

resource "aws_autoscaling_group" "ServerGroup" {
  name_prefix               = "{{.Env.asg_prefix}}"
  max_size                  = "{{.Env.max_size}}"
  min_size                  = "{{.Env.min_size}}"
  desired_capacity          = "{{.Env.asg_desired}}"
  health_check_grace_period = "{{.Env.health_check_grace_period}}"
  vpc_zone_identifier       = ["{{.Env.subnet1}}"]
  launch_configuration      = "${aws_launch_configuration.LaunchConfig.name}"
  tag {
    key = "ASGName"
    value = "{{.Env.host_name}}"
    propagate_at_launch = true    
  }
  tag {
    key = "Name"
    value = "{{.Env.host_name}}"
    propagate_at_launch = true    
  }
  tag {
    key = "Creator"
    value = "{{.Env.CREATOR}}"
    propagate_at_launch = true    
  }
  lifecycle {
    create_before_destroy = true
    }
}

resource "aws_launch_configuration" "LaunchConfig" {
  name_prefix                 = "{{.Env.lc_prefix}}"
  image_id                    = "{{.Env.buster_ami}}"
  instance_type               = "{{.Env.instance_type}}"
  key_name                    = "{{.Env.key_name}}"
  security_groups             = ["{{.Env.sgAll}}"]
  iam_instance_profile        = "{{.Env.iamrole}}"
  associate_public_ip_address = true

  root_block_device {
    volume_type           = "{{.Env.volume_type}}"
    volume_size           = "{{.Env.volume_size}}"
    delete_on_termination = "{{.Env.delete_on_termination}}"
  }
  lifecycle {
    create_before_destroy = true
  }
  user_data = "${data.template_file.userdata.rendered}"
}
